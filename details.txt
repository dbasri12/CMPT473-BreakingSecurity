1. To prevent an attack such as the one implemented in breaking.py, we can make the computational time of checking the password a constant. This can be achieved by using a flag instead of returning instantly when a character does not match with the stored password. After the loop is complete, we check if the flag is set and return accordingly. This makes it difficult for an attacker to gain information from the timing, since the timing won't vary by much
 2. A way to enhance the security of the Facade and CaerfilyDesinedSurvis classes is to make the execute method more limited, so that it only processes commands that are given as individual commands on their own line and that have the right amount and type of arguments. This would stop attackers from combining multiple commands onto the same line and passing them to the execute method, which would stop them from obtaining the __admin_codeword attribute or invoking the takeover method.